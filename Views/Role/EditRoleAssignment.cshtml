@model OFAMA.Models.UserWithRoleInfo

@{
    ViewData["Title"] = "EditRoleAssignment";
}

<head>
    <meta http-equiv="X-UA-Compatible" content="IE=Edge,chrome=1" />
    <meta name="viewport" content="width=device-width,initial-scale=1.0" />
    <!--==============レイアウトを制御する独自のCSSを読み込み===============-->
    <link rel="stylesheet" type="text/css" href="~/css/site.css" />
</head>
<h1 class="heading">Edit Role Assignment</h1>

<div class="flex-container">
    <h5>@Html.DisplayNameFor(model => model.UserName)</h5>
    <h5>
        @Html.DisplayFor(model => model.UserName)
        @Html.HiddenFor(model => model.UserName)
        @Html.HiddenFor(model => model.UserEmail)
        @Html.HiddenFor(model => model.UserId)
    </h5>
</div>

<div class="row">
    <div class="col-md-4">
        <form asp-action="EditRoleAssignment">
            <table class="table table-hover">
                <thead>
                    <tr>
                        <th>@Html.DisplayNameFor(model => model.UserRoles)</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @for (int i = 0; i < Model.UserRoles.Count; i++)
                    {
                        <tr>
                            <td>@Html.DisplayFor(modelItem => Model.UserRoles[i].RoleName)</td>
                            <td>
                                @Html.EditorFor(model => model.UserRoles[i].IsInThisRole)
                                @Html.HiddenFor(model => model.UserRoles[i].RoleName)
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary me-3" />
                <a asp-controller="Users" asp-action="Index" class="btn btn-secondary">Back</a>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}