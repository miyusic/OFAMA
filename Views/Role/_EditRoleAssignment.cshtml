@model OFAMA.Models.UserWithRoleInfo

@{
    ViewData["Title"] = "EditRoleAssignment";
}

<h1>EditRoleAssignment</h1>

<h4>UserWithRoleInfo</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="EditRoleAssignment">
            <table class="table">
                <thead>
                    <tr>
                        <th>
                            @Html.DisplayNameFor(model => model.UserName)
                        </th>
                        @foreach (var role in Model.UserRoles)
                        {
                            <th>
                                @Html.DisplayFor(modelItem => role.RoleName)
                            </th>
                        }
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td>
                            @Html.DisplayFor(model => model.UserName)
                            @Html.HiddenFor(model => model.UserName)
                            @Html.HiddenFor(model => model.UserEmail)
                            @Html.HiddenFor(model => model.UserId)
                        </td>
                        @for (int i = 0; i < Model.UserRoles.Count; i++)
                        {
                            <td>
                                @Html.EditorFor(model => model.UserRoles[i].IsInThisRole)
                                @Html.HiddenFor(model => model.UserRoles[i].RoleName)
                            </td>
                        }

                    </tr>
                </tbody>
            </table>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
</div>

<div>
        <a asp-controller="Users" asp-action="Index" >Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
